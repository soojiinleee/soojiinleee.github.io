{"componentChunkName":"component---src-templates-blog-post-js","path":"/django/settings-file/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"b2f99ec7-292a-51ed-8d1c-57b5ec72292f","excerpt":"django에서 settings 디렉토리 생성 후 개발, 사용, 테스트 별로 환경 분리해서 환경 파일 관리하기 Contents 1. settings.py 이동 1-1.  하위에 settings 디렉토리 생성 1-2. settings.py를 settings…","html":"<p>django에서 settings 디렉토리 생성 후 개발, 사용, 테스트 별로 환경 분리해서 환경 파일 관리하기</p>\n<h1>Contents</h1>\n<ul>\n<li><a href=\"#1-settingspy-%EC%9D%B4%EB%8F%99\">1. settings.py 이동</a>\n<ul>\n<li><a href=\"#1-1-config-%ED%95%98%EC%9C%84%EC%97%90-settings-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EC%83%9D%EC%84%B1\">1-1. <code class=\"language-text\">config</code> 하위에 settings 디렉토리 생성</a></li>\n<li><a href=\"#1-2-settingspy%EB%A5%BC-settings-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%EB%A1%9C-%EC%9D%B4%EB%8F%99-%EB%B0%8F-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD\">1-2. settings.py를 settings 디렉토리로 이동 및 이름 변경</a></li>\n</ul>\n</li>\n<li><a href=\"#2-%ED%99%98%EA%B2%BD%EB%B3%84-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">2. 환경별 설정 파일 생성</a>\n<ul>\n<li><a href=\"#2-2-basepy-%EC%9D%98-basedir-%EC%88%98%EC%A0%95\">2-2. <code class=\"language-text\">base.py</code>의 <code class=\"language-text\">BASE_DIR</code> 수정</a></li>\n<li><a href=\"#2-3-devpy-%EB%93%B1%EC%97%90-%EC%95%84%EB%9E%98-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80\">2-3. <code class=\"language-text\">dev.py</code> 등에 아래 설정 추가</a></li>\n</ul>\n</li>\n<li><a href=\"#3-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%B0%EB%B3%B8-setting-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95\">3. 프로젝트 기본 setting 파일 설정 </a></li>\n<li><a href=\"#4-django-shell-%EC%97%90%EC%84%9C-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\">4. django <code class=\"language-text\">shell</code>에서 확인하기</a>\n<ul>\n<li><a href=\"#4-1-shell-%EC%97%90%EC%84%9C-basedir-%EC%B6%9C%EB%A0%A5\">4-1. <code class=\"language-text\">shell</code> 에서 <code class=\"language-text\">BASE_DIR</code> 출력</a></li>\n<li><a href=\"#4-2-%EC%98%A4%EB%A5%98\">4-2. 오류</a></li>\n</ul>\n</li>\n</ul>\n<h1>1. settings.py 이동</h1>\n<ul>\n<li><code class=\"language-text\">django-admin startproject (프로젝트 이름 / 예:config) .</code> 명령어를 통해 프로젝트 생성 후</li>\n<li><code class=\"language-text\">config</code>(프로젝트 이름 디렉토리)에 settings.py 파일 자동으로 생성 됨\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n├── config\n│   ├── __init__.py\n│   ├── asgi.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n└── manage.py</code></pre></div>\n</li>\n</ul>\n<h3>1-1. <code class=\"language-text\">config</code> 하위에 settings 디렉토리 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> config\n<span class=\"token function\">mkdir</span> settings</code></pre></div>\n<h3>1-2. settings.py를 settings 디렉토리로 이동 및 이름 변경</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mv</span> settings.py settings/base.py\n\n<span class=\"token comment\"># git add 완료된 경우 git mv 명령어로 수정</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">base.py</code> 혹은 <code class=\"language-text\">common.py</code> 등</li>\n</ul>\n<h1>2. 환경별 설정 파일 생성</h1>\n<h3>2-1. 각 환경 별 세팅 파일 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">touch</span> dev.py\n<span class=\"token function\">touch</span> prod.py\n<span class=\"token function\">touch</span> test.py</code></pre></div>\n<h3>2-2. <code class=\"language-text\">base.py</code>의 <code class=\"language-text\">BASE_DIR</code> 수정</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. Path 이용하는 방법(Django 3.xx 이상 기본)</span>\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\nBASE_DIR <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>parent\n\n\n<span class=\"token comment\"># 2. dirname 이용하는 방법</span>\n<span class=\"token keyword\">from</span> os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">import</span> abspath<span class=\"token punctuation\">,</span> dirname\n\nBASE_DIR <span class=\"token operator\">=</span> dirname<span class=\"token punctuation\">(</span>dirname<span class=\"token punctuation\">(</span>dirname<span class=\"token punctuation\">(</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h3>2-3. <code class=\"language-text\">dev.py</code> 등에 아래 설정 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>base <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># prod.py는 DEBUG 설정 추가</span>\nDEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<br>\n<br>\n<p>여기까지 완료 했으면 디렉토리 구조는 아래와 같이 나온다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n├── config\n│   ├── __init__.py\n│   ├── asgi.py\n│   ├── settings\n│   │    └── base.py\n│   │    └── dev.py\n│   │    └── prod.py\n│   ├── urls.py\n│   └── wsgi.py\n└── manage.py</code></pre></div>\n<h1>3. 프로젝트 기본 setting 파일 설정</h1>\n<h3>3-1. <code class=\"language-text\">manage.py</code>에서 <code class=\"language-text\">setdefault</code>의 기본 설정 경로를 수정 (✨중요)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'DJANGO_SETTINGS_MODULE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'config.settings.dev'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1>4. django <code class=\"language-text\">shell</code>에서 확인하기</h1>\n<h3>4-1. <code class=\"language-text\">shell</code> 에서 <code class=\"language-text\">BASE_DIR</code> 출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ from django.conf <span class=\"token function\">import</span> settings\n$ print<span class=\"token punctuation\">(</span>settings.BASE_DIR<span class=\"token punctuation\">)</span>\n\n/Users/soojin/Develop/test        <span class=\"token comment\"># BASE_DIR의 경로 출력</span></code></pre></div>\n<h3>4-2. 오류</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ from django.conf <span class=\"token function\">import</span> settings\n$ print<span class=\"token punctuation\">(</span>settings.BASE_DIR<span class=\"token punctuation\">)</span>\n\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"&lt;console>\"</span>, line <span class=\"token number\">1</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n<span class=\"token comment\">#!/usr/bin/env python</span>\n  File <span class=\"token string\">\"/Users/soojin/Develop/test/.venv/lib/python3.11/site-packages/django/conf/__init__.py\"</span>, line <span class=\"token number\">94</span>, <span class=\"token keyword\">in</span> __getattr__\n    val <span class=\"token operator\">=</span> getattr<span class=\"token punctuation\">(</span>_wrapped, name<span class=\"token punctuation\">)</span>\n          ^^^^^^^^^^^^^^^^^^^^^^^</code></pre></div>\n<ul>\n<li>프로젝트 환경 설정을 찾을 수 없기 때문에 <code class=\"language-text\">runserver</code>, <code class=\"language-text\">migrate</code> 등 명령어가 작동하지 않는다.</li>\n<li>이런 오류가 나면 <code class=\"language-text\">manage.py</code>와 <code class=\"language-text\">base.py</code>의 <code class=\"language-text\">BASE_DIR</code> 경로를 다시 확인하기</li>\n</ul>","frontmatter":{"title":"📌 django - 환경 파일 관리하기","date":"February 20, 2023","description":"django에서 개발, 사용, 테스트 별로 환경 분리해서 settings 파일 관리하기"}},"previous":{"fields":{"slug":"/book/TDD_05/"},"frontmatter":{"title":"📚 TDD Chapter 05"}},"next":{"fields":{"slug":"/django/drf-authentication-1/"},"frontmatter":{"title":"📌 DRF Authentication 1"}}},"pageContext":{"id":"b2f99ec7-292a-51ed-8d1c-57b5ec72292f","previousPostId":"ef0cdd86-5ef7-5802-903c-bc9cbd58ef4a","nextPostId":"b88ce015-e5f1-55b4-a033-0b4bdc01d9a8"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}